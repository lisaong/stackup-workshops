@page "/fetchdata"
@using Microsoft.AspNetCore.SignalR.Client
@using monit_hackernews.Data
@inject NavigationManager NavigationManager

<h1>Hackernews Top Headlines</h1>

<p>This component demonstrates fetching data using SignalR.</p>
<!-- https://docs.microsoft.com/en-us/aspnet/core/tutorials/signalr-blazor-webassembly -->

@if (!IsConnected)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Score</th>
                <th>Title</th>
                <th>Url</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var headline in _headlines)
            {
                <tr>
                    <td>@headline.time</td>
                    <td>@headline.score</td>
                    <td>@headline.title</td>
                    <td>@headline.url</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private HubConnection _hubConnection;
    private List<NewsHeadline> _headlines = new List<NewsHeadline>();

    // Invoked after component is initialized
    // https://docs.microsoft.com/en-us/aspnet/core/blazor/lifecycle?view=aspnetcore-3.1
    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/newsHub"))
            .Build();

        _hubConnection.On<NewsHeadline>("ReceiveMessage", (headline) =>
        {
            _headlines.Add(headline);
            StateHasChanged(); // tell view to re-render
        });

        await _hubConnection.StartAsync();
    }

    public bool IsConnected =>
        _hubConnection.State == HubConnectionState.Connected;    
}
